# This is a basic workflow to help you get started with Actions

name: Grafana

# Controls when the workflow will run
on:
  # push:
  
  pull_request:
    branches: [ "main" ]
    paths:
      - 'grafana-dashboards/*'

permissions:
  contents: write

jobs:

  diff:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
    
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Install Grafana Grizzly CLI
        run: |
          curl -fSL -o "/usr/local/bin/grr" "https://github.com/grafana/grizzly/releases/download/v0.2.0/grr-linux-amd64"
          chmod a+x "/usr/local/bin/grr"

      - name: Show diff between current PR and grafana state
        id: diff
        env:
          GRAFANA_URL: https://eigenlayer.grafana.net
          GRAFANA_TOKEN: ${{ secrets.GRAFANA_TOKEN }}
        run: |
          echo "🐐🐐🐐 **Approve these diffs and I will pull the current grafana state into this PR.** 🐐🐐🐐" > diff.txt
          grr diff -d grafana-dashboards/resources >> diff.txt
      
      - uses: mshick/add-pr-comment@v2
        with:
          message-path: diff.txt

          
  pull-changes:
    needs: diff
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      
      - name: Install Grafana Grizzly CLI
        run: |
          curl -fSL -o "/usr/local/bin/grr" "https://github.com/grafana/grizzly/releases/download/v0.2.0/grr-linux-amd64"
          chmod a+x "/usr/local/bin/grr"

      - name: Download grafana state
        env:
          GRAFANA_URL: https://eigenlayer.grafana.net
          GRAFANA_TOKEN: ${{ secrets.GRAFANA_TOKEN }}
        run: grr pull -d grafana-dashboards/resources -t "Dashboard/*" -t "DashboardFolder/*"

      - name: Push downloaded grafana state to PR branch
        run: |
          git config --global user.email "github@action.com"
          git config --global user.name "grafana github workflow"
          if git status --porcelaine | grep .; then
            git add grafana-dashboards/resources/*
            git commit -m "GITHUB ACTION: committing grafana state"
            git push
          fi
      
      - uses: mshick/add-pr-comment@v2
        with:
          message: |
            "🐐🐐🐐 **Pulled and committed current Grafana Dashboards' state.** 🐐🐐🐐"
            "Look at the committed diff as a safety measure and feel free to merge when ready."

